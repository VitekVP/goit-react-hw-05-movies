{"version":3,"file":"static/js/127.3ea4a20c.chunk.js","mappings":"sLAEaA,E,QAAMC,GAAAA,EAAH,qE,SCEHC,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OACE,+BACE,SAACH,EAAD,UAAMG,KAGX,C,qJCNYC,EAAOH,EAAAA,GAAAA,GAAH,2CAIJI,EAAOJ,EAAAA,GAAAA,GAAH,oRAkBJK,EAAOL,EAAAA,GAAAA,IAAH,6FAOJM,GAAIN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,wK,SC3BDQ,EAAqB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7BC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YACxB,OACE,SAACX,EAAD,WACE,UAACE,EAAD,CAAGU,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMR,GAAtC,WACE,SAACL,EAAD,WACE,gBACEc,IACEJ,EAAW,yCAC2BA,GAClCK,EAENC,IAAKP,EACLQ,MAAM,KACNC,OAAO,SAGVT,MAdMD,EAkBd,KAGN,E,mBCRD,EArBa,WACX,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAUM,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAR,GAAK,OAAIC,EAASD,EAAMS,SAAnB,GACf,GAAE,KAGD,iCACE,eAAIC,MAAO,CAAEC,SAAU,IAAvB,SAA6B,oBAC5BX,IAAS,SAACzB,EAAA,EAAD,CAAWC,QAASwB,IAC7BjB,IAAU,SAACD,EAAD,CAAoBC,OAAQA,MAG5C,C,iMCvBK6B,EAAW,+BACXC,EAAU,mCAEHV,EAAiB,mCAAG,oGACRW,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBC,IAFb,cACzBR,EADyB,yBAIxBA,GAJwB,2CAAH,qDAOjBU,EAAY,mCAAG,WAAMC,GAAN,uFACHF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAI,EADA,oBACmBH,IAFhB,cACpBR,EADoB,yBAInBA,GAJmB,2CAAH,sDAOZY,EAAe,mCAAG,WAAMD,GAAN,uFACNF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAI,EADA,4BAC2BH,IAFrB,cACvBR,EADuB,yBAItBA,GAJsB,2CAAH,sDAOfa,EAAe,mCAAG,WAAMF,GAAN,uFACNF,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAI,EADA,4BAC2BH,IAFrB,cACvBR,EADuB,yBAItBA,GAJsB,2CAAH,sDAOfc,EAAkB,mCAAG,WAAMC,GAAN,uFACTN,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeC,EADf,kBACgCO,EADhC,yBADS,cAC1Bf,EAD0B,yBAIzBA,GAJyB,2CAAH,qD","sources":["components/NoServise/NoServise.styled.js","components/NoServise/NoServise.jsx","components/TrendingMoviesList/TrendingMoviesList.styled.js","components/TrendingMoviesList/TrendingMoviesList.jsx","pages/Home/Home.jsx","themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.p`\n  font-size: 20px;\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Box } from './NoServise.styled';\n\nexport const NoServise = ({ message }) => {\n  return (\n    <>\n      <Box>{message}</Box>\n    </>\n  );\n};\n\nNoServise.propTypes = {\n  message: PropTypes.node,\n};\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 20px 0;\n`;\n\nexport const Item = styled.li`\n  padding: 2px;\n\n  box-shadow: 0px 0px 3px 0px #000000bf;\n  border-radius: 4px;\n\n  transition: transform 300ms linear;\n\n  &:not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  &:hover {\n    transform: scale(1.02);\n    cursor: zoom-in;\n  }\n`;\n\nexport const Wrap = styled.div`\n  /* width: 60px;\n  height: 80px; */\n\n  /* object-fit: cover; */\n`;\n\nexport const A = styled(Link)`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n\n  font-size: 18px;\n  font-weight: 500;\n  color: inherit;\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport image from '../../image/image.jpg';\nimport { A, Item, List, Wrap } from './TrendingMoviesList.styled';\n\nexport const TrendingMoviesList = ({ movies }) => {\n  const location = useLocation();\n  // console.log(location);\n\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <Item key={id}>\n            <A to={`movies/${id}`} state={{ from: location }}>\n              <Wrap>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : image\n                  }\n                  alt={title}\n                  width=\"60\"\n                  height=\"80\"\n                />\n              </Wrap>\n              {title}\n            </A>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nTrendingMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\n\nimport { TrendingMoviesList } from 'components/TrendingMoviesList/TrendingMoviesList';\nimport { getTrendingMovies } from '../../themoviedbAPI';\nimport { NoServise } from 'components/NoServise/NoServise';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then(response => {\n        setMovies(response.data.results);\n      })\n      .catch(error => setError(error.toJSON()));\n  }, []);\n\n  return (\n    <>\n      <h1 style={{ fontSize: 24 }}>Trending today:</h1>\n      {error && <NoServise message={error} />}\n      {movies && <TrendingMoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '45d68bd879a3e756f01bd66285287115';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getCreditsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const gethMoviesBySearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n  return response;\n};\n"],"names":["Box","styled","NoServise","message","List","Item","Wrap","A","Link","TrendingMoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","image","alt","width","height","useState","setMovies","error","setError","useEffect","getTrendingMovies","then","response","data","results","catch","toJSON","style","fontSize","BASE_URL","API_KEY","axios","getMovieById","movieId","getCreditsMovie","getReviewsMovie","gethMoviesBySearch","query"],"sourceRoot":""}