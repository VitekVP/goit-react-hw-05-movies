{"version":3,"file":"static/js/631.da1931f8.chunk.js","mappings":"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","sources":["components/NoServise/NoServise.styled.js","components/NoServise/NoServise.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","components/SearchMoviesList/SearchMoviesList.styled.js","components/SearchMoviesList/SearchMoviesList.jsx","pages/Movies/Movies.jsx","themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.p`\n  font-size: 20px;\n\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Box } from './NoServise.styled';\n\nexport const NoServise = ({ message }) => {\n  return (\n    <>\n      <Box>{message}</Box>\n    </>\n  );\n};\n\nNoServise.propTypes = {\n  message: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const SForm = styled.form`\n  width: 100%;\n  max-width: 600px;\n  height: 48px;\n\n  display: flex;\n  gap: 2px;\n  align-items: center;\n\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormInput = styled.input`\n  padding-left: 4px;\n  padding-right: 4px;\n\n  width: 550px;\n  height: 42px;\n\n  display: inline-block;\n\n  font: inherit;\n  font-size: 18px;\n\n  border: 2px solid grey;\n  border-radius: 4px;\n  outline: none;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n\n  &:focus {\n    border: 2px solid green;\n    outline: none;\n    box-shadow: 0px 0px 10px 1px rgba(44, 221, 118, 0.65);\n  }\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n\n  border: 0;\n  opacity: 0.6;\n\n  transition: opacity 300ms linear;\n  cursor: pointer;\n\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FcSearch } from 'react-icons/fc';\n\nimport { SForm, SearchFormButton, SearchFormInput } from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [searchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') ?? '');\n\n  const handleInputChange = event => {\n    //   console.log(event.target.value);\n    setQuery(event.target.value.toLowerCase());\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    // console.dir(event.target);\n    if (query.trim() === '') {\n      alert('please enter a request');\n      return;\n    }\n    onSubmit(query);\n    // setQuery('');\n  };\n\n  return (\n    <SForm onSubmit={handleFormSubmit}>\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={handleInputChange}\n      />\n      <SearchFormButton type=\"submit\">\n        <FcSearch style={{ width: 30, height: 30 }} />\n      </SearchFormButton>\n    </SForm>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Link } from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 20px 0;\n`;\n\nexport const Item = styled.li`\n  padding: 2px;\n\n  box-shadow: 0px 0px 3px 0px #000000bf;\n  border-radius: 4px;\n\n  transition: transform 300ms linear;\n\n  &:not(:last-child) {\n    margin-bottom: 6px;\n  }\n\n  &:hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Wrap = styled.div`\n  /* width: 60px;\n  height: 80px;\n\n  object-fit: contain; */\n`;\n\nexport const A = styled(Link)`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n\n  font-size: 18px;\n  font-weight: 500;\n  color: inherit;\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport image from '../../image/image.jpg';\nimport { A, Item, List, Wrap } from './SearchMoviesList.styled';\n\nexport const SearchMoviesList = ({ movies }) => {\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <Item key={id}>\n            <A to={`${id}`} state={{ from: location }}>\n              <Wrap>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : image\n                  }\n                  alt={title}\n                  width=\"60\"\n                  height=\"80\"\n                />\n              </Wrap>\n              {title}\n            </A>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nSearchMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { SearchMoviesList } from 'components/SearchMoviesList/SearchMoviesList';\nimport { gethMoviesBySearch } from '../../themoviedbAPI';\nimport { NoServise } from 'components/NoServise/NoServise';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const queryMovie = searchParams.get('query') ?? '';\n\n  const handleSubmit = searchQuery => {\n    setSearchParams({ query: searchQuery });\n  };\n  // console.log(queryMovie);\n  useEffect(() => {\n    if (queryMovie === '') {\n      return;\n    }\n    setLoading(true);\n\n    gethMoviesBySearch(queryMovie)\n      .then(response => {\n        setMoviesSearch(response.data.results);\n      })\n      .catch(error => setError(error.toJSON()))\n      .finally(setLoading(false));\n  }, [queryMovie]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n      {loading && <Loader />}\n      {error && <NoServise message={error} />}\n      {moviesSearch && <SearchMoviesList movies={moviesSearch} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '45d68bd879a3e756f01bd66285287115';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getMovieById = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getCreditsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getReviewsMovie = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const gethMoviesBySearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n  return response;\n};\n"],"names":["Box","styled","NoServise","message","SForm","SearchFormInput","SearchFormButton","SearchForm","onSubmit","useSearchParams","searchParams","useState","get","query","setQuery","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","style","width","height","List","Item","Wrap","A","Link","SearchMoviesList","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","image","alt","setSearchParams","moviesSearch","setMoviesSearch","error","setError","loading","setLoading","queryMovie","useEffect","gethMoviesBySearch","then","response","data","results","catch","toJSON","finally","searchQuery","Loader","BASE_URL","API_KEY","getTrendingMovies","axios","getMovieById","movieId","getCreditsMovie","getReviewsMovie"],"sourceRoot":""}